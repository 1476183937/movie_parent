<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnust.movie.mapper.AverageRatingMapper" >
  <resultMap id="BaseResultMap" type="com.hnust.movie.entity.po.AverageRating" >
    <id column="avg_id" property="avgId" jdbcType="BIGINT" />
    <result column="mid" property="mid" jdbcType="BIGINT" />
    <result column="average_rating" property="averageRating" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    avg_id, mid, average_rating, date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hnust.movie.entity.po.AverageRatingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_average_rating
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from m_average_rating
    where avg_id = #{avgId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from m_average_rating
    where avg_id = #{avgId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hnust.movie.entity.po.AverageRatingExample" >
    delete from m_average_rating
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hnust.movie.entity.po.AverageRating" >
    insert into m_average_rating (avg_id, mid, average_rating, 
      date)
    values (#{avgId,jdbcType=BIGINT}, #{mid,jdbcType=BIGINT}, #{averageRating,jdbcType=VARCHAR}, 
      #{date,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hnust.movie.entity.po.AverageRating" >
    insert into m_average_rating
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="avgId != null" >
        avg_id,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="averageRating != null" >
        average_rating,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="avgId != null" >
        #{avgId,jdbcType=BIGINT},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=BIGINT},
      </if>
      <if test="averageRating != null" >
        #{averageRating,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hnust.movie.entity.po.AverageRatingExample" resultType="java.lang.Integer" >
    select count(*) from m_average_rating
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update m_average_rating
    <set >
      <if test="record.avgId != null" >
        avg_id = #{record.avgId,jdbcType=BIGINT},
      </if>
      <if test="record.mid != null" >
        mid = #{record.mid,jdbcType=BIGINT},
      </if>
      <if test="record.averageRating != null" >
        average_rating = #{record.averageRating,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update m_average_rating
    set avg_id = #{record.avgId,jdbcType=BIGINT},
      mid = #{record.mid,jdbcType=BIGINT},
      average_rating = #{record.averageRating,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hnust.movie.entity.po.AverageRating" >
    update m_average_rating
    <set >
      <if test="mid != null" >
        mid = #{mid,jdbcType=BIGINT},
      </if>
      <if test="averageRating != null" >
        average_rating = #{averageRating,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=VARCHAR},
      </if>
    </set>
    where avg_id = #{avgId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnust.movie.entity.po.AverageRating" >
    update m_average_rating
    set mid = #{mid,jdbcType=BIGINT},
      average_rating = #{averageRating,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR}
    where avg_id = #{avgId,jdbcType=BIGINT}
  </update>
</mapper>