<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnust.movie.mapper.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.hnust.movie.entity.po.UserInfo" >
    <id column="uid" property="uid" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="emaile" property="emaile" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="no_login_time" property="noLoginTime" jdbcType="VARCHAR" />
    <result column="face" property="face" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, username, password, nick_name, register_time, birthday, phone, emaile, login_time, 
    gender, no_login_time, face
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hnust.movie.entity.po.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_userinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from m_userinfo
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from m_userinfo
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hnust.movie.entity.po.UserInfoExample" >
    delete from m_userinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hnust.movie.entity.po.UserInfo" >
    insert into m_userinfo (uid, username, password, 
      nick_name, register_time, birthday, 
      phone, emaile, login_time, 
      gender, no_login_time, face
      )
    values (#{uid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{registerTime,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{emaile,jdbcType=VARCHAR}, #{loginTime,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{noLoginTime,jdbcType=VARCHAR}, #{face,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hnust.movie.entity.po.UserInfo" >
    insert into m_userinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="emaile != null" >
        emaile,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="noLoginTime != null" >
        no_login_time,
      </if>
      <if test="face != null" >
        face,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="emaile != null" >
        #{emaile,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="noLoginTime != null" >
        #{noLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="face != null" >
        #{face,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hnust.movie.entity.po.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from m_userinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update m_userinfo
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null" >
        register_time = #{record.registerTime,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.emaile != null" >
        emaile = #{record.emaile,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.noLoginTime != null" >
        no_login_time = #{record.noLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="record.face != null" >
        face = #{record.face,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update m_userinfo
    set uid = #{record.uid,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      register_time = #{record.registerTime,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      emaile = #{record.emaile,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      no_login_time = #{record.noLoginTime,jdbcType=VARCHAR},
      face = #{record.face,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hnust.movie.entity.po.UserInfo" >
    update m_userinfo
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="emaile != null" >
        emaile = #{emaile,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="noLoginTime != null" >
        no_login_time = #{noLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="face != null" >
        face = #{face,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnust.movie.entity.po.UserInfo" >
    update m_userinfo
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      emaile = #{emaile,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      no_login_time = #{noLoginTime,jdbcType=VARCHAR},
      face = #{face,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>